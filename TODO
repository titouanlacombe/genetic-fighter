improve AI {
	optimize collisions by only updating the map cache {
		add map for object ? probably & if so the need add sorted dist list with it
	}

	build 3D cylinder intersection engine (distance to intersection, evade point in space-time) {
		build 3D lines (xa, ya, za) & (xb, yb, zb)
		=> calc cross product (xc, yc, zc)
		find da = - xc * xa - yc * ya - zc * za
		find db = - xc * xb - yc * yb - zc * zb
		dist = abs(da - db) / sqrt(xc*xc + yc*yc + zc*zc)
		then substract the radiuses
	}

	simulation class ? what for ?

	build pid engine for controls
	test: easiest state first: turret
}

improve game? {
	unnable tu turn if vel too low?
	improve feel
	add obstacles ?
}

begin modeling evolution simmulation {
	being able to visualize evolution
	if no munitions left in objects => winner max life
	evolution sim loop does a generation by frames
	then display the results
	evolution game object
}

ai evolution mode {
	???
}

add interesting mechanics {
	parent choissisent partenaire le plus proche (pour éviter des mélanges de stratégies infructueux, element de random quand meme pour éviter de stuck)
	need a lot of random in each generation (comment garder en vie? systeme de lignées?)
	damage proportional to kinetic energy
	mutation rate dynamic
	ignore explored zones (DB needed ?)
	comparer temp de convergence (fitness score reached)
}
