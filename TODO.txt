begin modeling evolution simmulation {
	move dna merge from parent selection strategie to evolve strat
	merge 3 proggress trackers arrays into 1 (replace average fitness by median because best / median will be dna or keep average ? sort dnas?)
	add enemies killed in fitness?
	color for random dna (color in dna ? dna in fighter ?)
	make fighter dump it's stats in dna (now only need dna to evaluate fitness)
	make fitness calculation a strategie
}

running average of median/average fitness (green line) ?
finish documentation

improve game? {
	test adding ability for the cannon to turn on its own
	unnable tu turn if vel too low?
	add obstacles ?
	better aiming controller for AIs?
}

add interesting mechanics {
	parent choissisent partenaire le plus proche dans l'espace vectoriel DNA {
		=> pour éviter des mélanges de stratégies infructueux
	}
	need a lot of random in each generation (comment garder en vie? systeme de lignées?)
	damage proportional to kinetic energy?
	dynamic mutation rate (dependant on generation number) ?
	ignore explored zones of dna vector space (DB needed ?)
	comparer temps de convergence avec differentes methodes (fitness score reached)
}

try many tries see if we get same results
result 1 interpretation {
	low wanted_target_dist to escape bullets
	low min_fire_error to avoid firering?

	survival: {
		defend from other while protecting them?
	}
}

futures expansions {
	switch to electron https://www.electronjs.org/
	switch to typescript & compile with make
	writing sim in c++ https://lupomontero.com/writing-node-js-modules-in-cpp/
}
